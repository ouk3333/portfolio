<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper   
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"    
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.co.frozen.dao.AdminLicenseDAO">
	
	<select id="getLicenseData" resultType="kr.co.frozen.model.AdminLicenseModel" parameterType="hashMap">
		select
			*
		from
			tbl_license
		order by
			order_no asc;
	</select>
	
	<insert id="addLicenseData" parameterType="hashMap">
		insert into tbl_license_storage
		(type, name, remarks, sw)
		values
		(#{ type }, #{ name }, #{ remarks }, 'n')
	</insert>
	
	<select id="getLicenseStorageData" resultType="kr.co.frozen.model.AdminLicenseModel" parameterType="hashMap">
		select
			*
		from
			tbl_license_storage
		where
			sw = 'n'
	</select>
	
	<select id="getMaxLicenseStorageOrderNo" resultType="int" parameterType="hashMap">
		select
			COALESCE(max(order_no) + 1, 1)
		from
			tbl_license
	</select>
	
	<select id="getLicenseStorageData_single" resultType="kr.co.frozen.model.AdminLicenseModel" parameterType="hashMap">
		select
			*
		from
			tbl_license_storage
		where
			uid = #{ uid }
	</select>
	
	<insert id="addLicenseStorageData" parameterType="hashMap">
		insert into tbl_license
		(uid, type, name, remarks, order_no)
		values
		(#{ uid }, #{ type }, #{ name }, #{ remarks }, #{ order_no })
	</insert>
	
	<update id="afterAddLicenseStorageData" parameterType="hashMap">
		update
			tbl_license_storage
		set
			sw = 'y'
		where
			uid = #{ uid }
	</update>
	
	<delete id="removeLicenseData" parameterType="hashMap">
		delete from
			tbl_license
		where
			uid = #{ uid }
	</delete>
	
	<update id="afterRemoveLicenseData" parameterType="hashMap">
		update
			tbl_license_storage
		set
			sw = 'n'
		where
			uid = #{ uid }
	</update>
	
	<delete id="deleteLicenseStorageData" parameterType="hashMap">
		delete from
			tbl_license_storage
		where
			uid = #{ uid }
	</delete>
	
	<update id="setModifyLicenseData" parameterType="hashMap">
		update
			tbl_license_storage
		set
			  type = #{ type }
			, name = #{ name }
			, remarks = #{ remarks }
		where
			uid = #{ uid }
	</update>
	
</mapper>